x <- a:z
x <- "a":"z"
x <- 1:5
setwd("~/Git-projects/r-bioinfo-ds/r-programing/week2")
x=4
if(x>3) {
y <- 10
} else {
y <- 0
}
y
y <- if(x>3) {
10
} else {
0
}
y
x=3
y <- if(x>3) {
10
} else {
0
}
print(i)
for(i in 1:10) {
print(i)
}
for(i in 1:10) {
print(i)
}
x <- c("a", "b", "c", "d")
for(i in 1:4) {
print(x[i])
}
for(i in seq_along(x)) {
print(x[i])
}
for(letter in x) {
print(letter)
}
fo(i in 1:4) print(x[i])
for(i in 1:4) print(x[i])
x <- matrix(1:6, 2, 3)
x <- matrix(1:6, 2, 3)
for(i in seq_len(nrow(x))) {
for(j in seq_len(ncol((x)))) {
print(x[i, j])
}
}
x
count <- 0
while(count < 10) {
print(count)
count <- count+1
}
z<- 5
while(z >= 3 && <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) {
z <- z+1
} else {
z <- z-1
}
}
while(z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) {
z <- z+1
} else {
z <- z-1
}
}
x0 <- 1
tol <- 1e-8
repeat {
x1 <- computeEstimate()
if(abs(x1-x0) < tol) {
break
} else {
x0 <- x1
}
}
for(i in 1:100) {
if(i <= 20) {
next
} else {
print(i)
}
}
print("Hello R")
for(i in 1:100) {
if(i <= 20) {
next
} else {
print("Hello R")
}
}
for(i in 1:100) {
if(i <= 20) {
next
} else {
print("Hello world")
}
}
add2 <- function(x, y) {
x+y
}
add2(3, 2)
above10 <- function(x) {
use <- x > 10
x[use]
}
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x, 12)
above <- function(x, n=10) {
use <- x > n
x[use]
}
x <- 1:20
above(x)
means
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
mean[i] <- mean(y[, i])
}
means
}
columnmean(airquality)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i])
}
means
}
columnmean(airquality)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
print(means)
for(i in 1:nc) {
means[i] <- mean(y[, i])
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA=TRUE) {
nc <- ncol(y)
means <- numeric(nc)
print(means)
for(i in 1:nc) {
means[i] <- mean(y[, i]) #calculate for the entire column
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA=TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i]) #calculate for the entire column
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA=TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i]) #calculate for the entire column
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA=TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i], na.rm=removeNA) #calculate for the entire column
}
means
}
columnmean(airquality)
columnmean(airquality, FALSE)
mydata <- rnorm(100)
sd(mydata)
sd(x=mydata)
sd(x=mydata, na.rm=FALSE)
sd(na.rm=FALSE, x=mydata)
sd(na.rm=FALSE, mydata)
lm(data=mydata, y ~ x, model=FALSE, 1:1000)
lm(y ~ x, mydata, 1:1000, model=FALSE)
arg(lm)
args(lm)
mydata <- rnorm(100)
lm(data=mydata, y ~ x, model=FALSE, 1:1000)
lm(data = mydata, y ~ x, model = FALSE, 1:1000)
lm(data = mydata, y ~ x, model = FALSE, 1:100)
lm(y ~ x, mydata, 1:100, model=FALSE)
lm(y - x, mydata, 1:100, model=FALSE)
lm(data = mydata, y - x, model = FALSE, 1:100)
lm(data = mydata, y ~ x, model = FALSE, 1:100)
args(lm)
